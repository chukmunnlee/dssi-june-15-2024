# PIPELINE DEFINITION
# Name: my-first-pipeline
# Inputs:
#    cols: int
#    rows: int
#    values: int
components:
  comp-display-matrix:
    executorLabel: exec-display-matrix
    inputDefinitions:
      artifacts:
        infile:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-rand-matrix:
    executorLabel: exec-rand-matrix
    inputDefinitions:
      parameters:
        cols:
          parameterType: NUMBER_INTEGER
        rows:
          parameterType: NUMBER_INTEGER
        values:
          parameterType: NUMBER_INTEGER
    outputDefinitions:
      artifacts:
        outfile:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        Output:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-display-matrix:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - display_matrix
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'numpy' 'pandas'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef display_matrix(infile: dsl.InputPath(\"numpy\")):\n   import\
          \ numpy as np\n   import pickle\n\n   print(f\">>> infile: {infile}\")\n\
          \n   with open(infile, \"rb\") as f:\n      mat = pickle.load(f)\n\n   print(\"\
          >>>> numpy: \", mat)\n\n"
        image: python:3.11
    exec-rand-matrix:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - rand_matrix
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'numpy' 'pandas'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef rand_matrix(rows: int, cols: int, values: int\n      , outfile:\
          \ dsl.OutputPath(\"numpy\")) -> str:\n   import numpy as np\n   import pickle\n\
          \n   print(f\">>> outfile: {outfile}\")\n\n   mat = np.random.randint(-values,\
          \ values, (rows, cols))\n   # write out the matrix as bytes with pickle\n\
          \   with open(outfile, \"wb\") as f:\n      pickle.dump(mat, f)\n\n   return\
          \ outfile\n\n"
        image: python:3.11
pipelineInfo:
  displayName: My first pipeline
  name: my-first-pipeline
root:
  dag:
    tasks:
      display-matrix:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-display-matrix
        dependentTasks:
        - rand-matrix
        inputs:
          artifacts:
            infile:
              taskOutputArtifact:
                outputArtifactKey: outfile
                producerTask: rand-matrix
        taskInfo:
          name: display-matrix
      rand-matrix:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-rand-matrix
        inputs:
          parameters:
            cols:
              componentInputParameter: cols
            rows:
              componentInputParameter: rows
            values:
              componentInputParameter: values
        taskInfo:
          name: rand-matrix
  inputDefinitions:
    parameters:
      cols:
        parameterType: NUMBER_INTEGER
      rows:
        parameterType: NUMBER_INTEGER
      values:
        parameterType: NUMBER_INTEGER
schemaVersion: 2.1.0
sdkVersion: kfp-2.7.0
